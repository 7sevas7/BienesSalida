<Grid @ref="grid"
TItem="SolicitudBien"
Class="table table-hover table-bordered table-striped mt-3"
Data="solicitudes">

    <GridColumns>
        <GridColumn TItem="SolicitudBien" HeaderText="No.">
            @(solicitudes.IndexOf(context) + 1)
        </GridColumn>
        <GridColumn TItem="SolicitudBien" HeaderText="No. Inventario">
            @context.NumeroInventario
        </GridColumn>
        <GridColumn TItem="SolicitudBien" HeaderText="Descripción">
            @(context.Descripcion?.ToUpper())
        </GridColumn>
        <GridColumn TItem="SolicitudBien" HeaderText="Motivo de salida">
            @(context.MotivoSalida?.ToUpper())
        </GridColumn>
        <GridColumn TItem="SolicitudBien" HeaderText="Observaciones">
            @(context.Observaciones?.ToUpper())
        </GridColumn>
        <GridColumn TItem="SolicitudBien" HeaderText="Estatus">
            <Button Color="ButtonColor.Danger" Size="ButtonSize.Medium" @onclick="() => CancelarArticulo(context)">
                <Icon Name="IconName.XCircle"></Icon>
            </Button>
        </GridColumn>
    </GridColumns>
</Grid>

@code {

    public Grid<SolicitudBien> grid = default!;
    public List<SolicitudBien>? solicitudes;

    public async Task CancelarArticulo(SolicitudBien solicitud)
    {
        solicitudes = solicitudes?.Where(s => s != solicitud).ToList();
        await grid.RefreshDataAsync(); // Forzar actualización de la tabla
    }

    protected override void OnInitialized()
    {
        solicitudes = new List<SolicitudBien>();
        StateHasChanged();
    }

    public async Task AddSolicitud(SolicitudBien solicitud)
    {
        Console.WriteLine("Añadiendo ");
        solicitudes!.Add(solicitud);
        await grid.RefreshDataAsync();
    }

}