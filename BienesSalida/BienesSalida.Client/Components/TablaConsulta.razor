@inject LocalStorageService localService
@inject HttpClient client

<Grid 
@ref="tablaData"
TItem="SalidasBienes"
Class="table table-hover table-bordered table-striped"
DataProvider="HistorialProvider"
AllowPaging="true"
PageSize="100"
Responsive="true">
    <GridColumns>
        <GridColumn TItem="SalidasBienes" HeaderText="Nombre" FilterTextboxWidth="100"> 
            @context.nombre
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Fecha" FilterTextboxWidth="100"> 
            @context.fechaHora
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="No. Salida"> 
            @context.noSal
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="No. Inventario" FilterTextboxWidth="100"> 
            @context.noInven
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Descripción"> 
            @context.descrip
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Motivo"> 
            @context.motivo
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Observaciones"> 
            @context.observa
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Área"> 
            @context.area
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Enc. Área"> 
            @context.eArea
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Estatus"> 
            @context.estatus
        </GridColumn>
    </GridColumns> 

</Grid>

@code{

    private Grid<SalidasBienes> tablaData = default!;
    private IEnumerable<SalidasBienes> historial { set; get; }
    protected override async Task OnInitializedAsync()
    {
        var idUser = await localService.GetItemAsync("idUserBienes");
        var userBienes = await localService.GetItemAsync("userBienes");

        var request = new HttpRequestMessage(HttpMethod.Get, $"https://localhost:7266/api/activo/historial/{idUser}/{userBienes}");
        var response = await client.SendAsync(request);
        var text = await response.Content.ReadAsStringAsync();
        var data = JsonConvert.DeserializeObject<List<SalidasBienes>>(text);
        historial = data;
    }
    private async Task<GridDataProviderResult<SalidasBienes>> HistorialProvider(GridDataProviderRequest<SalidasBienes> request)
    {
            return await Task.FromResult(request.ApplyTo(historial));
        
    }

 


}