<Grid TItem="SalidasBienes"
      Class="table table-hover table-bordered"
      @* DataProvider="CustomersDataProvider" *@
      AllowFiltering="true"
      AllowPaging="true"
      AllowSorting="true"
      FixedHeader="true"
      Responsive="true"
      Unit="Unit.Px">

    <GridColumns>
        <GridColumn TItem="SalidasBienes" HeaderText="Id" PropertyName="CustomerId" SortString="CustomerId" FilterTextboxWidth="50" HeaderTextAlignment="Alignment.Center" TextAlignment="Alignment.Center">
            @context
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Customer Name" PropertyName="CustomerName" SortString="CustomerName" FilterTextboxWidth="80">
            @context
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Phone" PropertyName="Phone" SortString="Phone" FilterTextboxWidth="100">
            @context
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Email" PropertyName="Email" SortString="Email" FilterTextboxWidth="120">
            @context
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Address" PropertyName="Address" SortString="Address" FilterTextboxWidth="150">
            @context
        </GridColumn>
        <GridColumn TItem="SalidasBienes" HeaderText="Postal Zip" PropertyName="PostalZip" SortString="PostalZip" FilterTextboxWidth="80">
            @context
        </GridColumn>
        <GridColumn TItem="SalidasBienes" FreezeRightPosition="0" HeaderText="Country" PropertyName="Country" SortString="Country" FilterTextboxWidth="80">
            @context
        </GridColumn>
    </GridColumns>

</Grid>

@code {
    [Inject] public SalidasBienes _customerService { get; set; } = default!;

    // private async Task<GridDataProviderResult<SalidasBienes>> CustomersDataProvider(GridDataProviderRequest<SalidasBienes> request)
    // {
    //     string sortString = "";
    //     SortDirection sortDirection = SortDirection.None;

    //     if (request.Sorting is not null && request.Sorting.Any())
    //     {
    //         // Note: Multi column sorting is not supported at this moment
    //         sortString = request.Sorting.FirstOrDefault()!.SortString;
    //         sortDirection = request.Sorting.FirstOrDefault()!.SortDirection;
    //     }
    //     var result = await _customerService.GetCustomersAsync(request.Filters, request.PageNumber, request.PageSize, sortString, sortDirection, request.CancellationToken);
    //     return await Task.FromResult(new GridDataProviderResult<SalidasBienes> { Data = result.Item1, TotalCount = result.Item2 });
    // }
}
