@* <Grid TItem="SalidasBienes"
      Class="table table-hover table-bordered"
      DataProvider="CargarSalidasAsync"
      AllowFiltering="true"
      AllowPaging="true"
      AllowSorting="true"
      FixedHeader="true"
      Responsive="true"
      Unit="Unit.Px">

        <GridColumns>
            <GridColumn TItem="SalidasBienes" HeaderText="Nombre" PropertyName="nombre" FilterTextboxWidth="100" />
            <GridColumn TItem="SalidasBienes" HeaderText="Fecha" PropertyName="fechaHora" FilterTextboxWidth="100" />
            <GridColumn TItem="SalidasBienes" HeaderText="No. Salida" PropertyName="noSal" />
            <GridColumn TItem="SalidasBienes" HeaderText="No. Inventario" PropertyName="noInven" FilterTextboxWidth="100" />
            <GridColumn TItem="SalidasBienes" HeaderText="Descripción" PropertyName="descrip" />
            <GridColumn TItem="SalidasBienes" HeaderText="Motivo" PropertyName="motivo" />
            <GridColumn TItem="SalidasBienes" HeaderText="Observaciones" PropertyName="observa" />
            <GridColumn TItem="SalidasBienes" HeaderText="Área" PropertyName="area" />
            <GridColumn TItem="SalidasBienes" HeaderText="Enc. Área" PropertyName="eArea" />
            <GridColumn TItem="SalidasBienes" HeaderText="Estatus" PropertyName="estatus" />
    </GridColumns> 

</Grid>

@code{

    [Parameter] public int? noEmple { get; set; }
    [Parameter] public string? nombreUsuario { get; set; }


    private async Task<GridDataProviderResult<SalidasBienes>> CargarSalidasAsync(GridDataProviderRequest<SalidasBienes> request)
    {
        var datos = await tuServicio.salidasConsGAsync(noEmple, nombreUsuario);
        return new GridDataProviderResult<SalidasBienes>
        {
            Data = datos,
            TotalCount = datos.Count
        };
    }
} *@